name: Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
    branches: ["main"]

jobs:

  linux-windows-build:
    name: MinGW Build
    if: startsWith( github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:

    - name: OS Packages 
      run: |
        sudo apt-get update --fix-missing && sudo apt-get -y install \
        git build-essential zlib1g zlib1g-dev wget zip unzip \
        mingw-w64 binutils-mingw-w64 g++-mingw-w64 gcc-multilib

    - name: Minisign
      run: |
        MINISIGN_TMP=`mktemp -d`
        cd $MINISIGN_TMP
        wget https://github.com/aead/minisign/releases/download/v0.2.0/minisign-linux-amd64.tar.gz
        tar xvf minisign-linux-amd64.tar.gz
        cp ./minisign /usr/bin

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Git Fetch Tags
      run: git fetch --prune --unshallow --tags -f

    - name: Build Binaries
      run: |
        make clean
        make
        rm -f ./compiled/.gitkeep
        VERSION=$(git describe --tags --abbrev=0)
        cat extension.json | jq ".version |= \"$VERSION\"" > ./compiled/extension.json
        cp LICENSE ./compiled/LICENSE
        cd compiled
        tar -czvf ../nanodump.tar.gz .
      
    - name: Sign Binaries
      run: |
        touch /tmp/minisign.key && chmod 600 /tmp/minisign.key
        echo "$MINISIGN_PRIVATE_KEY" > minisign.key
        /usr/bin/minisign -s /tmp/minisign.key -S -m nanodump.tar.gz -t nanodump -x nanodump.minisig

    - name: "Publish Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        files: |
          ./nanodump.minisig
          ./nanodump.tar.gz
